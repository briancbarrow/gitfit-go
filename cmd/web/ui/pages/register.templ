package pages

import (
	"github.com/briancbarrow/gitfit-go/cmd/web/ui"
	"github.com/briancbarrow/gitfit-go/cmd/web/ui/components"
)

var nameError string

templ Register(form ui.UserRegisterForm, td ui.TemplateData) {
	@ui.Base(td) {
		<div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
			<div class="sm:mx-auto sm:w-full sm:max-w-sm">
				<h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">Register for an account</h2>
			</div>
			<div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
				if len(form.Validator.NonFieldErrors) > 0 {
					<ul class="p-4 mb-2 bg-red-200 border-red text-red rounded">
						for _, error := range form.Validator.NonFieldErrors {
							<li>{ error }</li>
						}
					</ul>
				}
				<form
 					class="space-y-6"
 					action="/register"
 					method="POST"
				>
					<input type="hidden" name="csrf_token" value={ td.CSRFToken }/>
					@components.TextInput(components.TextInputAttrs{
            DisplayName: "First Name",
            Name: "name",
            FieldErrors: form.Validator.FieldErrors["name"],
            Value: form.FirstName,
          })
					@components.TextInput(components.TextInputAttrs{
            DisplayName: "Last Name",
            Name: "last_name",
            FieldErrors: form.Validator.FieldErrors["last_name"],
            Value: form.LastName,
          })
					@components.TextInput(components.TextInputAttrs{
            DisplayName: "Email",
            Name: "email",
            FieldErrors: form.Validator.FieldErrors["email"],
            Value: form.Email,
            Required: true,
          })
					@components.TextInput(components.TextInputAttrs{
            DisplayName: "Password",
            Name: "password",
            FieldErrors: form.Validator.FieldErrors["password"],
            Required: true,
            Type: "password",
          })
					@components.Button(components.ButtonAttrs{
              Type: "submit",
              Text: "Register",
            }) {
						@components.Spinner(components.SpinnerAttrs{
              Color: "white",
              Size: "h-5 w-5",
              IndicatorId: "register-spinner",
              ExtraClasses: "htmx-indicator",
            })
					}
				</form>
				<p class="mt-10 text-center text-sm text-gray-500">
					Already a member? 
					<a href="/login" class="text-link">Login</a>
				</p>
			</div>
		</div>
	}
}
