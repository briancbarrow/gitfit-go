package dashboard_components

import "time"
import "github.com/briancbarrow/gitfit-go/internal/database/tenancy/db"

type ChartData struct {
	FirstWeekday     time.Weekday
	DayData          [][]time.Time
	WorkoutSetCounts []tenant_database.GetWorkoutSetCountsRow
	FirstDayFound    bool
}

func updateFirstDayFound(chartData *ChartData) string {
	chartData.FirstDayFound = true
	return ""
}

var colorMap = map[int]string{
	1: "bg-green-100",
	2: "bg-green-200",
	3: "bg-green-300",
	4: "bg-green-400",
	5: "bg-green-500",
	6: "bg-green-600",
	7: "bg-green-700",
	8: "bg-green-800",
	9: "bg-green-900",
}

func getClassForDay(day time.Time, workoutSetCounts []tenant_database.GetWorkoutSetCountsRow) string {
	for _, workoutSetCount := range workoutSetCounts {
		if workoutSetCount.Date == day.Format("2006-01-02") {
			if workoutSetCount.Count > 9 {
				return colorMap[9]
			}
			return colorMap[int(workoutSetCount.Count)]
		}
	}
	return "bg-gray-200"
}

templ Chart(chartData ChartData) {
	<div id="chart" hx-swap-oob="outerHTML:#chart" class="mt-8">
		<h1>2024</h1>
		<table class="w-full">
			for _, weekDay := range chartData.DayData {
				<tr class="m-4">
					for dayIdx, day := range weekDay {
						if dayIdx == 0 {
							if day.Weekday() != chartData.FirstWeekday && !chartData.FirstDayFound {
								<td
									class="day-square h-4 border-4 border-white bg-white-200"
								></td>
							} else {
								<span class="hidden found">{ updateFirstDayFound(&chartData) }</span>
							}
						}
						<td
							class={ "day-square", "h-4", "rounded", "border-4", "border-white", "bg-gray-100", getClassForDay(day, chartData.WorkoutSetCounts) }
						>
							<span class="hidden tooltip absolute">{ day.Format("2006-01-02") }</span>
						</td>
					}
				</tr>
			}
		</table>
	</div>
}
